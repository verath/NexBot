// Generated by CoffeeScript 1.7.1
(function() {
  var Loader, Mock, MockLoader,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Mock = require('./mockCS');

  Loader = require('./../../loader');

  MockLoader = (function(_super) {
    var _allowSet, _data;

    __extends(MockLoader, _super);

    _data = {};

    _allowSet = true;

    function MockLoader(data, allowSet) {
      MockLoader.__super__.constructor.call(this, Loader.prototype);
      if (typeof data === 'object') {
        _data = data;
      }
      allowSet = !!allowSet;
    }

    MockLoader.prototype.get = function(key) {
      this.registerMethodCall('get', arguments);
      return _data[key];
    };

    MockLoader.prototype.set = function(key) {
      this.registerMethodCall('set', arguments);
      if (_allowSet) {
        _data[key] = value;
      }
      this.save();
    };

    return MockLoader;

  })(Mock);

  module.exports = MockLoader;

}).call(this);
